{"version":3,"sources":["Pages/Resume/Education.tsx","Pages/Resume/Experience.tsx","Pages/Resume/Skills.tsx","Pages/Resume/Resume.tsx"],"names":["Education","props","RenderList","startYear","endYear","cource","collage","desc","className","data-aos","icon","faUniversity","size","color","colors","primary_dark","Row","id","Col","lg","userInfo","resume","education","map","val","index","Experience","startDate","endDate","companyName","possition","monthInd","getUTCMonth","year","getFullYear","monthOfExp","expString","noOfMonths","dt2","dt1","diff","getTime","Math","abs","round","diff_months","Date","console","log","noOfYr","parseInt","toString","experience","key","SkillCard","React","memo","domain","perc","delay","data-aos-delay","height","width","cx","cy","r","style","strokeDashoffset","SkillInfo","skillName","progress","keyframes","ProgressDiv","styled","div","SkillsConainer","useState","activeIndex","setActiveIndex","skillNameRef","setRef","setHrRef","skills","startAnim","classList","remove","toggle","addEventListener","ToggleButtonGroup","as","type","name","defaultValue","ToggleButton","value","onClick","ref","ButtonGroup","Button","aria-label","faChevronLeft","secondary","faChevronRight","primary","Carousel","onSelect","ind","slide","interval","controls","indicators","fade","touch","Item","frontEnd","backEnd","mobileAppDev","other","Container","items","currentClassName","offset","href"],"mappings":"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","file":"static/js/10.01ddf6ae.chunk.js","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport \"./Resume-style.scss\"\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/esm/Row'\nimport { userInfo, EducationProps } from '../../constants/user'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUniversity } from '@fortawesome/free-solid-svg-icons'\nimport { colors } from '../../style'\n\ninterface Props {\n    id: string\n}\n\nexport default function Education(props: Props) {\n\n    const RenderList = ({ startYear, endYear, cource, collage, desc }: EducationProps) => (\n        <div className=\"list-item-container\" data-aos=\"fade-up\">\n            <div className=\"info-icon\">\n                <div className=\"resume-circle\">\n                    <FontAwesomeIcon icon={faUniversity} size={\"lg\"} color={colors.primary_dark} />\n                </div>\n            </div>\n            <div className=\"info\">\n                <p className=\"resume-subTitle\" >{startYear + \" - \" + endYear}</p>\n                <p className=\"resume-heading\">{cource}</p>\n                <p className=\"resume-subHeading\">{collage}</p>\n                <p className=\"resume-desc\">{desc}</p>\n            </div>\n        </div>\n    )\n\n    return (\n        <Row id={props.id}>\n            <Col lg={12}>\n                <br /><br /><br /><br />\n                <p className=\"page-title\" >Education</p>\n                {userInfo.resume.education?.map((val, index) => <RenderList {...val} />)}\n            </Col>\n        </Row>\n    )\n}","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport \"./Resume-style.scss\"\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport { userInfo, ExperienceProps, EducationProps } from '../../constants/user'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUniversity } from '@fortawesome/free-solid-svg-icons'\nimport { colors } from '../../style'\n\ninterface Props {\n    id: string\n}\n\n\nexport default function Experience({ ...props }: Props) {\n\n    const diff_years = (dt2: any, dt1: any) => {\n        var diff = (dt2.getTime() - dt1.getTime()) / 1000;\n        diff /= (60 * 60 * 24);\n        return Math.abs(Math.round(diff / 365.25));\n    }\n\n    const diff_months = (dt2: any, dt1: any) => {\n        var diff = (dt2.getTime() - dt1.getTime()) / 1000;\n        diff /= (60 * 60 * 24 * 7 * 4);\n        return Math.abs(Math.round(diff));\n    }\n\n    const RenderList = ({ startDate, endDate, companyName, possition, desc }: ExperienceProps) => {\n        const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        let monthInd = startDate.getUTCMonth() + 1\n        let year = startDate.getFullYear()\n        let monthOfExp = null;\n        let yearOfExp = 0;\n        let expString = \"\"\n        if (endDate === \"Present\") {\n            let noOfMonths = diff_months(new Date(), startDate)\n            console.log(noOfMonths)\n            let noOfYr = noOfMonths > 12 ? parseInt((noOfMonths / 12).toString()) : 0\n            console.log(noOfYr)\n            yearOfExp = noOfYr\n            if (noOfMonths > 12) {\n                monthOfExp = noOfMonths - (12 * noOfYr)\n                expString = `${yearOfExp} yrs ${monthOfExp} mos`\n            } else {\n                monthOfExp = noOfMonths\n                expString = `${monthOfExp - 1} mos`\n            }\n        }\n\n        return (\n            <div className=\"list-item-container\" data-aos=\"fade-up\">\n                <div className=\"info-icon\">\n                    <div className=\"resume-circle\">\n                        <FontAwesomeIcon icon={faUniversity} size={\"lg\"} color={colors.primary_dark} />\n                    </div>\n                </div>\n                <div className=\"info\">\n                    <p className=\"resume-subTitle\" >{`${MONTHS[monthInd]} ${year} - ${endDate} • ${expString} `}</p>\n                    <p className=\"resume-heading\">{companyName}</p>\n                    <p className=\"resume-subHeading\">{possition}</p>\n                    <p className=\"resume-desc\">{desc}</p>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <Row id={props.id}>\n            <Col lg={12}>\n                <br /><br /><br /><br />\n                <p className=\"page-title\" >Experience</p>\n                {userInfo.resume.experience?.map((val, index) => <RenderList {...val} key={index} />)}\n            </Col>\n        </Row>\n    )\n}","import React, { useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Carousel from 'react-bootstrap/Carousel'\nimport { userInfo, Skills as SkillInfoProps } from '../../constants/user'\nimport \"./Resume-style.scss\"\nimport styled, { keyframes, } from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport { colors } from '../../style'\n\ninterface Props {\n    id?: string\n}\n\nconst SkillCard = React.memo(({ domain, perc, delay }: any) => {\n    return (\n        <div className=\"card-container\" data-aos=\"fade-up\" data-aos-delay={delay} >\n            <div className=\"card-heading\">\n                <p className=\"card-skill-title\">{domain}</p>\n            </div>\n            <div className=\"card-progress-container\">\n                <svg height=\"100%\" width=\"100%\">\n                    <circle cx=\"50%\" cy=\"50%\" r=\"70\" />\n                    <circle cx=\"50%\" cy=\"50%\" r=\"70\" style={{ strokeDashoffset: 440 - (440 * perc) / 100 }} />\n                </svg>\n                <p className=\"card-skill-title percentage-circle\">{perc + \"%\"}</p>\n            </div>\n        </div>\n    )\n})\n\nconst SkillInfo = React.memo(({ skillName, experience }: SkillInfoProps) => {\n\n    const progress = keyframes`\n        from \n            {\n                width : 0%;\n            };\n        to{\n            width: ${experience + \"%\"};\n        };\n    `;\n\n    const ProgressDiv = styled.div`\n        width: ${experience + \"%\"};\n        animation: ${progress} 1s ease;\n    `;\n\n    return (\n        <div className=\"skill-info\">\n            <p className=\"skillName\">{skillName}</p>\n            <ProgressDiv className=\"skill-bar\" />\n        </div>\n    )\n})\n\nconst SkillsConainer = React.memo(() => {\n    const [activeIndex, setActiveIndex] = useState(0)\n    const [skillNameRef, setRef] = useState<HTMLParagraphElement | null>(null);\n    const [hrRef, setHrRef] = useState<HTMLHRElement | null>(null);\n    const skillsArr = ['Front End', \"Back End\", \"Mobile App Dev\", \"Other\"]\n    const { skills } = userInfo.resume\n\n    const startAnim = () => {\n        skillNameRef?.classList.remove(\"animate__fadeInRight\")\n        skillNameRef?.classList.toggle(\"animate__fadeInRight\");\n        skillNameRef?.addEventListener('animationend', () => {\n            skillNameRef?.classList.remove(\"animate__fadeInRight\")\n        });\n    }\n\n    const handleNext = () => {\n        setActiveIndex((activeIndex + 1) % 4)\n        startAnim()\n    }\n\n    const handlePrev = () => {\n        setActiveIndex((((activeIndex - 1) % 4) + 4) % 4)\n    }\n\n    return (\n        <Col lg={12}>\n            <div className=\"skill-box-container\">\n                <div className=\"skills-but-container\">\n                    <ToggleButtonGroup as=\"div\" type=\"radio\" name=\"options\" defaultValue={activeIndex} className=\"skills-but-group\" >\n                        <ToggleButton id=\"togal-but\" className=\"one\" value={0} onClick={() => setActiveIndex(0)} >Front End</ToggleButton>\n                        <ToggleButton id=\"togal-but\" className=\"two\" value={1} onClick={() => setActiveIndex(1)}>Back End</ToggleButton>\n                        <ToggleButton id=\"togal-but\" className=\"three\" value={2} onClick={() => setActiveIndex(2)}>Mobile App Dev</ToggleButton>\n                        <ToggleButton id=\"togal-but\" className=\"four\" value={3} onClick={() => setActiveIndex(3)}>Other</ToggleButton>\n                        <hr ref={ref => { setHrRef(ref) }} />\n                    </ToggleButtonGroup>\n                </div>\n                <div className=\"skill-box-container-sm\">\n                    <div className=\"active-skill\">\n                        <p className=\"skillName-title animate__animated\" ref={ref => { setRef(ref) }}>{skillsArr[activeIndex]}</p>\n                    </div>\n                    <div>\n                        <ButtonGroup className=\"project-toggle-group\" >\n                            <Button id=\"project-toggle-but1\" aria-label=\"Prev\" onClick={handlePrev}>\n                                <FontAwesomeIcon size=\"lg\" icon={faChevronLeft} color={colors.secondary} />\n                            </Button>\n                            <Button id=\"project-toggle-but2\" aria-label=\"Naxt\" onClick={handleNext}>\n                                <FontAwesomeIcon size=\"lg\" icon={faChevronRight} color={colors.primary} />\n                            </Button>\n                        </ButtonGroup>\n                    </div>\n                </div>\n                <div>\n                    <Carousel\n                        activeIndex={activeIndex}\n                        onSelect={(ind) => { setActiveIndex(ind); startAnim() }}\n                        slide={false}\n                        interval={null}\n                        controls={false}\n                        indicators={false}\n                        fade={true}\n                        touch={true}>\n                        <Carousel.Item>\n                            <div className=\"skill-box\">\n                                {skills?.frontEnd.map((val, index) => <SkillInfo skillName={val.skillName} experience={val.experience} />)}\n                            </div>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <div className=\"skill-box\">\n                                {skills?.backEnd.map((val, index) => <SkillInfo skillName={val.skillName} experience={val.experience} />)}\n                            </div>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <div className=\"skill-box\">\n                                {skills?.mobileAppDev.map((val, index) => <SkillInfo skillName={val.skillName} experience={val.experience} />)}\n                            </div>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <div className=\"skill-box\">\n                                {skills?.other.map((val, index) => <SkillInfo skillName={val.skillName} experience={val.experience} />)}\n                            </div>\n                        </Carousel.Item>\n                    </Carousel>\n                </div>\n            </div>\n        </Col>\n    )\n})\n\nconst Skills = (props: Props) => {\n    return (\n        <Row id={props.id}>\n            <Col lg={12}>\n                <br /><br /><br /><br />\n                <p className=\"page-title opacity-05\" >Skills</p>\n                <div className=\"skill-card\">\n                    <SkillCard domain=\"React Native\" perc=\"70\" delay={0} />\n                    <SkillCard domain=\"Web development\" perc=\"80\" delay={200} />\n                    <SkillCard domain=\"Algorithms\" perc=\"50\" delay={400} />\n                </div>\n            </Col>\n            <SkillsConainer />\n        </Row>\n    )\n}\n\nexport default React.memo(Skills)\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Scrollspy from \"react-scrollspy\";\n\n//Pages\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport Awards from \"./Awards\";\nimport Skills from \"./Skills\";\n\n//Style\nimport \"./Resume-style.scss\";\n\nfunction Resume() {\n  return (\n    <Container id=\"Resume\">\n      <Row className=\"row\">\n        <Col lg={2} className=\"list-group-container\">\n          <div\n            id=\"resume-items-list\"\n            className=\"list-group sticky-top scrollspy-list-div\"\n          >\n            <Scrollspy\n              items={[\"list-item-1\", \"list-item-2\", \"list-item-3\"]}\n              currentClassName=\"active\"\n              offset={-100}\n            >\n              <a\n                className=\"list-group-item list-group-item-action\"\n                href=\"#list-item-1\"\n              >\n                Education\n              </a>\n              <a\n                className=\"list-group-item list-group-item-action\"\n                href=\"#list-item-2\"\n              >\n                Experience\n              </a>\n              <a\n                className=\"list-group-item list-group-item-action\"\n                href=\"#list-item-3\"\n              >\n                Skills\n              </a>\n            </Scrollspy>\n          </div>\n        </Col>\n        <Col className=\"list-group-item-container\">\n          <div className=\"list-group-scrollspy\">\n            <Education id=\"list-item-1\" />\n            <Experience id=\"list-item-2\" />\n            <Skills id=\"list-item-3\" />\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default React.memo(Resume);\n"],"sourceRoot":""}